// Generated by view binder compiler. Do not edit!
package com.s22010189.pil_pal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.s22010189.pil_pal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OtpVerifierResetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backInResetTwo;

  @NonNull
  public final ImageView imageView26;

  @NonNull
  public final ImageView imageView28;

  @NonNull
  public final EditText otpVerifier;

  @NonNull
  public final Button otpVerifierButton;

  @NonNull
  public final TextView textView24;

  @NonNull
  public final TextView textView549;

  private OtpVerifierResetBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backInResetTwo, @NonNull ImageView imageView26,
      @NonNull ImageView imageView28, @NonNull EditText otpVerifier,
      @NonNull Button otpVerifierButton, @NonNull TextView textView24,
      @NonNull TextView textView549) {
    this.rootView = rootView;
    this.backInResetTwo = backInResetTwo;
    this.imageView26 = imageView26;
    this.imageView28 = imageView28;
    this.otpVerifier = otpVerifier;
    this.otpVerifierButton = otpVerifierButton;
    this.textView24 = textView24;
    this.textView549 = textView549;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OtpVerifierResetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OtpVerifierResetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.otp_verifier_reset, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OtpVerifierResetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backInResetTwo;
      ImageView backInResetTwo = ViewBindings.findChildViewById(rootView, id);
      if (backInResetTwo == null) {
        break missingId;
      }

      id = R.id.imageView26;
      ImageView imageView26 = ViewBindings.findChildViewById(rootView, id);
      if (imageView26 == null) {
        break missingId;
      }

      id = R.id.imageView28;
      ImageView imageView28 = ViewBindings.findChildViewById(rootView, id);
      if (imageView28 == null) {
        break missingId;
      }

      id = R.id.otpVerifier;
      EditText otpVerifier = ViewBindings.findChildViewById(rootView, id);
      if (otpVerifier == null) {
        break missingId;
      }

      id = R.id.otpVerifierButton;
      Button otpVerifierButton = ViewBindings.findChildViewById(rootView, id);
      if (otpVerifierButton == null) {
        break missingId;
      }

      id = R.id.textView24;
      TextView textView24 = ViewBindings.findChildViewById(rootView, id);
      if (textView24 == null) {
        break missingId;
      }

      id = R.id.textView549;
      TextView textView549 = ViewBindings.findChildViewById(rootView, id);
      if (textView549 == null) {
        break missingId;
      }

      return new OtpVerifierResetBinding((ConstraintLayout) rootView, backInResetTwo, imageView26,
          imageView28, otpVerifier, otpVerifierButton, textView24, textView549);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
