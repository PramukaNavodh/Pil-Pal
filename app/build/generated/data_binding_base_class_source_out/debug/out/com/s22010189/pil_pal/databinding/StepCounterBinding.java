// Generated by view binder compiler. Do not edit!
package com.s22010189.pil_pal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.s22010189.pil_pal.CurvedProgressBar;
import com.s22010189.pil_pal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StepCounterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CurvedProgressBar curvedProgressBar;

  @NonNull
  public final ImageView imageView11;

  @NonNull
  public final ImageView imageView13;

  @NonNull
  public final TextView stepCountTextView;

  @NonNull
  public final TextView textView21;

  @NonNull
  public final TextView textView27;

  @NonNull
  public final TextView textView28;

  @NonNull
  public final TextView textView30;

  @NonNull
  public final CardView tipsWalk;

  private StepCounterBinding(@NonNull ConstraintLayout rootView,
      @NonNull CurvedProgressBar curvedProgressBar, @NonNull ImageView imageView11,
      @NonNull ImageView imageView13, @NonNull TextView stepCountTextView,
      @NonNull TextView textView21, @NonNull TextView textView27, @NonNull TextView textView28,
      @NonNull TextView textView30, @NonNull CardView tipsWalk) {
    this.rootView = rootView;
    this.curvedProgressBar = curvedProgressBar;
    this.imageView11 = imageView11;
    this.imageView13 = imageView13;
    this.stepCountTextView = stepCountTextView;
    this.textView21 = textView21;
    this.textView27 = textView27;
    this.textView28 = textView28;
    this.textView30 = textView30;
    this.tipsWalk = tipsWalk;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StepCounterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StepCounterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.step_counter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StepCounterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.curvedProgressBar;
      CurvedProgressBar curvedProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (curvedProgressBar == null) {
        break missingId;
      }

      id = R.id.imageView11;
      ImageView imageView11 = ViewBindings.findChildViewById(rootView, id);
      if (imageView11 == null) {
        break missingId;
      }

      id = R.id.imageView13;
      ImageView imageView13 = ViewBindings.findChildViewById(rootView, id);
      if (imageView13 == null) {
        break missingId;
      }

      id = R.id.stepCountTextView;
      TextView stepCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (stepCountTextView == null) {
        break missingId;
      }

      id = R.id.textView21;
      TextView textView21 = ViewBindings.findChildViewById(rootView, id);
      if (textView21 == null) {
        break missingId;
      }

      id = R.id.textView27;
      TextView textView27 = ViewBindings.findChildViewById(rootView, id);
      if (textView27 == null) {
        break missingId;
      }

      id = R.id.textView28;
      TextView textView28 = ViewBindings.findChildViewById(rootView, id);
      if (textView28 == null) {
        break missingId;
      }

      id = R.id.textView30;
      TextView textView30 = ViewBindings.findChildViewById(rootView, id);
      if (textView30 == null) {
        break missingId;
      }

      id = R.id.tipsWalk;
      CardView tipsWalk = ViewBindings.findChildViewById(rootView, id);
      if (tipsWalk == null) {
        break missingId;
      }

      return new StepCounterBinding((ConstraintLayout) rootView, curvedProgressBar, imageView11,
          imageView13, stepCountTextView, textView21, textView27, textView28, textView30, tipsWalk);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
