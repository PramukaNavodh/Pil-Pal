// Generated by view binder compiler. Do not edit!
package com.s22010189.pil_pal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.s22010189.pil_pal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ResetpasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnResetPassword;

  @NonNull
  public final Button btnSendOtp;

  @NonNull
  public final Button btnVerifyOtp;

  @NonNull
  public final EditText etMobileNumber;

  @NonNull
  public final EditText etNewPassword;

  @NonNull
  public final EditText etOtp;

  private ResetpasswordBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnResetPassword,
      @NonNull Button btnSendOtp, @NonNull Button btnVerifyOtp, @NonNull EditText etMobileNumber,
      @NonNull EditText etNewPassword, @NonNull EditText etOtp) {
    this.rootView = rootView;
    this.btnResetPassword = btnResetPassword;
    this.btnSendOtp = btnSendOtp;
    this.btnVerifyOtp = btnVerifyOtp;
    this.etMobileNumber = etMobileNumber;
    this.etNewPassword = etNewPassword;
    this.etOtp = etOtp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ResetpasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ResetpasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.resetpassword, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ResetpasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnResetPassword;
      Button btnResetPassword = ViewBindings.findChildViewById(rootView, id);
      if (btnResetPassword == null) {
        break missingId;
      }

      id = R.id.btnSendOtp;
      Button btnSendOtp = ViewBindings.findChildViewById(rootView, id);
      if (btnSendOtp == null) {
        break missingId;
      }

      id = R.id.btnVerifyOtp;
      Button btnVerifyOtp = ViewBindings.findChildViewById(rootView, id);
      if (btnVerifyOtp == null) {
        break missingId;
      }

      id = R.id.etMobileNumber;
      EditText etMobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (etMobileNumber == null) {
        break missingId;
      }

      id = R.id.etNewPassword;
      EditText etNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (etNewPassword == null) {
        break missingId;
      }

      id = R.id.etOtp;
      EditText etOtp = ViewBindings.findChildViewById(rootView, id);
      if (etOtp == null) {
        break missingId;
      }

      return new ResetpasswordBinding((ConstraintLayout) rootView, btnResetPassword, btnSendOtp,
          btnVerifyOtp, etMobileNumber, etNewPassword, etOtp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
