// Generated by view binder compiler. Do not edit!
package com.s22010189.pil_pal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.s22010189.pil_pal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MapPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button findPharm;

  @NonNull
  public final ImageView imageView23;

  @NonNull
  public final Button searchLocation;

  @NonNull
  public final EditText searchPlace;

  private MapPageBinding(@NonNull ConstraintLayout rootView, @NonNull Button findPharm,
      @NonNull ImageView imageView23, @NonNull Button searchLocation,
      @NonNull EditText searchPlace) {
    this.rootView = rootView;
    this.findPharm = findPharm;
    this.imageView23 = imageView23;
    this.searchLocation = searchLocation;
    this.searchPlace = searchPlace;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MapPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MapPageBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.map_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MapPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.findPharm;
      Button findPharm = ViewBindings.findChildViewById(rootView, id);
      if (findPharm == null) {
        break missingId;
      }

      id = R.id.imageView23;
      ImageView imageView23 = ViewBindings.findChildViewById(rootView, id);
      if (imageView23 == null) {
        break missingId;
      }

      id = R.id.searchLocation;
      Button searchLocation = ViewBindings.findChildViewById(rootView, id);
      if (searchLocation == null) {
        break missingId;
      }

      id = R.id.searchPlace;
      EditText searchPlace = ViewBindings.findChildViewById(rootView, id);
      if (searchPlace == null) {
        break missingId;
      }

      return new MapPageBinding((ConstraintLayout) rootView, findPharm, imageView23, searchLocation,
          searchPlace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
